{"version":3,"sources":["src/js/window.js","src/index.js"],"names":["Window","el","initX","initY","height","width","style","zIndex","window","maxZIndex","isGrabbed","isInit","grabOffset","x","y","dataset","rectangle","getBoundingClientRect","posX","Math","random","innerWidth","posY","innerHeight","setWindowPosition","addEventListener","e","onMouseDown","classList","add","clientX","clientY","transform","windowElements","document","querySelectorAll","windowList","forEach","push","win","remove"],"mappings":"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","file":"src.05852cc2.js","sourceRoot":"..","sourcesContent":["export default class Window {\n  constructor(el, initX, initY) {\n    this.el = el;\n    let height = 300;\n    let width = 300;\n    this.el.style.zIndex = window.maxZIndex++;\n    this.isGrabbed = false;\n    this.isInit = false;\n\n    this.grabOffset = { x: 0, y: 0 };\n\n    if (this.el.dataset.width && this.el.dataset.height) {\n      width = this.el.dataset.width;\n      height = this.el.dataset.height;\n    }\n    this.el.style.width = width + \"px\";\n    this.el.style.height = height + \"px\";\n\n    const rectangle = this.el.getBoundingClientRect();\n    this.posX = Math.random() * (window.innerWidth - rectangle.width);\n    this.posY = Math.random() * (window.innerHeight - rectangle.height);\n    this.setWindowPosition();\n\n    el.addEventListener(\"mousedown\", (e) => this.onMouseDown(e));\n  }\n\n  onMouseDown(e) {\n    //console.log(e);\n    this.el.style.zIndex = window.maxZIndex++;\n    this.isGrabbed = true;\n    this.el.classList.add(\"is-grabbed\");\n\n    //computing offset between mouse and card origin\n    const rectangle = this.el.getBoundingClientRect();\n    this.grabOffset = {\n      x: e.clientX - rectangle.x,\n      y: e.clientY - rectangle.y\n    };\n  }\n\n  setWindowPosition() {\n    const rectangle = this.el.getBoundingClientRect();\n\n    if (this.el.dataset.initX && this.el.dataset.initY) {\n      this.posX =\n        (this.el.dataset.initX / 100) * (window.innerWidth - rectangle.width);\n      this.posY =\n        (this.el.dataset.initY / 100) * (window.innerHeight - rectangle.height);\n    }\n    this.el.style.transform = `translate3d(${this.posX}px, ${this.posY}px, 0)`;\n  }\n}\n","import Window from \"./js/window\";\n\nconst windowElements = document.querySelectorAll(\".windows li\");\nconst windowList = [];\n\nwindow.maxZIndex = 0;\n\nwindowElements.forEach((el) => {\n  windowList.push(new Window(el));\n});\n\nwindow.addEventListener(\"mouseup\", () => {\n  windowList.forEach((win) => {\n    win.isGrabbed = false;\n    win.el.classList.remove(\"is-grabbed\");\n  });\n});\n\nwindow.addEventListener(\"mousemove\", (e) => {\n  windowList.forEach((win) => {\n    //console.log(e);\n    if (win.isGrabbed) {\n      win.el.style.transform = `translate3d(${\n        e.clientX - win.grabOffset.x\n      }px, ${e.clientY - win.grabOffset.y}px, 0)`;\n    }\n  });\n});\n\nwindow.addEventListener(\"resize\", () => {\n  windowList.forEach((win) => {\n    win.setWindowPosition();\n  });\n});\n"]}